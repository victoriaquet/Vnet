@model SNC2017.Models.TarjetaClub

@{
    ViewBag.Title = "Nueva Tarjeta Club";
}


<div class="card">
    <div class="card-header" data-background-color="green" style="display: flex">
        <h4 class="title">Tarjeta Club</h4>
        <span class="category" style="margin-top: 4px;margin-left:10px">Nueva</span>
    </div>

    @if (ViewBag.error)
    {
        <h3 class="text-danger text-center">La Suscripción ya posee la cantidad máxima de Tarjetas Club. <p>Intente eliminando alguna de las existentes.</p></h3>
        
        <div class="row">
           

                @Html.ActionLink("Volver", "Details", "Suscripciones", new { id = Model.IdSuscripcion }, new { @class = "btn btn-default" })
           
        </div>
    }
    else
    { <div class="card-content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.IdSuscripcion)

            <div id="example-tabs">
                <h3>Datos tarjeta</h3>
                <section style="overflow-y: scroll" class="row">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="col-lg-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(model => model.TipoTarjetaClub, htmlAttributes: new { @class = "control-label" })

                            @Html.EnumDropDownListFor(model => model.TipoTarjetaClub, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TipoTarjetaClub, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.Nombres, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.Nombres, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Nombres, "", new {@class = "text-danger"})

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.Apellido, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.Apellido, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Apellido, "", new {@class = "text-danger"})

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.DNI, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.DNI, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.DNI, "", new {@class = "text-danger"})

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.FechaNacimiento, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new {@class = "text-danger"})

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.TelefonoMovilArea, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.TelefonoMovilArea, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TelefonoMovilArea, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.TelefonoMovilNumero, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.TelefonoMovilNumero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TelefonoMovilNumero, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group label-floating is-empty">
                            @Html.LabelFor(model => model.Precio, htmlAttributes: new {@class = "control-label"})

                            @Html.EditorFor(model => model.Precio, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Precio, "", new {@class = "text-danger"})

                        </div>

                        <div class="row">
                            <div class="col-md-3">

                                @Html.ActionLink("Volver", "Details", "Suscripciones", new {id = Model.IdSuscripcion}, new {@class = "btn btn-default"})
                            </div>

                            <div class="col-md-3">
                                <input type="submit" value="Guardar" class="btn btn-success"/>
                            </div>
                        </div>

                    </div>

                </section>






            </div>

        }

    </div>}
    
</div>










